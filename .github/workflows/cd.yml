
name: Building FFXIV Voice Pack Creator

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  Build:
    name: Build
    runs-on: windows-latest
    steps:
        - uses: actions/checkout@v3

#        - name: Chocolatey Action
#          uses: crazy-max/ghaction-chocolatey@v2.1.0
#          with:
#            args: -h

#        - name: Install ffmpeg?
#          run: npm install ffmpeg-static

#        - name: Install FFMPEG?
#          run: choco install ffmpeg -y --no-progress

        - name: download it i guess
          shell: pwsh
          run: Invoke-WebRequest -Uri https://www.gyan.dev/ffmpeg/builds/ffmpeg-git-essentials.7z -OutFile ffmpeg.7z

        - name: IS IT HERE?
          run: ls

        - name: fuck it we extract
          run: 7z e ffmpeg.7z -oFFXIVVoiceClipNameGuesser/bin/Release/res ffmpeg.exe -r

#        - name: IS IT IN THERE
#          run: ls ./FFXIVVoiceClipNameGuesser/bin/Release/res

# 7z e ffmpeg.7z -offmpeg ffmpeg.exe -r

        - name: Install msbuild
          uses: microsoft/setup-msbuild@v1.1

        - name: Build app
          run: msbuild FFXIVVoiceClipNameGuesser\FFXIVVoicePackCreator.csproj -p:Configuration=Release

#        - name: Is stuff here?
#          run: ls FFXIVVoiceClipNameGuesser\bin\Release

# Zip back up
#        - name: Zip back up
#          run: Compress-Archive -Path ./FFXIVVoiceClipNameGuesser\bin\Release -DestinationPath Release.zip
# upload
        - name: Upload
          uses: actions/upload-artifact@v3
          with:
            name: Release
            path: ./FFXIVVoiceClipNameGuesser\bin\Release
  Release:
    name: Release
    runs-on: windows-latest
    needs: Build
    steps:
    - name:
      uses: actions/download-artifact@v3
      with:
        name: Release    
    
    - name: Test
      run: ls -R
    
    - name: Remove the shit
      run: 

    - name: Zip it up
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: 'release.zip'

    - name: Upload source code
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
    
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./release.zip
        asset_name: release-v${{ github.run_number }}.zip
        asset_content_type: application/zip

      
